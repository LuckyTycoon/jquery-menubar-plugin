/*
*   MA5 jquery mobile menu
*   v4.0.0
*   GitHub: https://github.com/ma-5/ma5-mobile-menu
*/
function ma5menu(atributes) {
	// menuDesktop = string, target to desktop menu which will be used for build menu mobile. For example '.site-menu'
	var menuDesktop = '.site-menu';
	if (atributes.menu !== undefined) {
			menuDesktop = atributes.menu;
	}
	// activeClass = string, active class name without dot from active desktop menu <li> or <a>. For example 'active'
	var activeClass = 'active';
	if (atributes.activeClass !== undefined) {
			activeClass = atributes.activeClass;
	}
	// menuTools = string, target to menu tools container which will be used for build menu mobile footer. For example '#sma5menu-tools'
	var menuFooter = '#ma5menu-tools';
	if (atributes.footer !== undefined) {
			menuFooter = atributes.footer;
	}
	if ($(menuDesktop).length > 0) {
			var ma5menuHtml = '\n' +
					'<!-- ma5-mobile-menu generated by js start -->\n' +
					'<nav id="js-ma5menu" class="ma5menu" itemscope itemtype="http://schema.org/SiteNavigationElement">\n' +
					'    <div class="ma5menu__header">\n' +
					'        <a class="ma5menu__home" href="/" tabindex="-1">\n' +
					'            <span class="ma5menu__logo"></span>\n' +
					'        </a>\n' +
					'        <a class="ma5menu__toggle" tabindex="-1">\n' +
					'            <span class="ma5menu__close"></span>\n' +
					'        </a>\n' +
					'    </div>\n' +
					'</nav>\n' +
					'<!-- ma5-mobile-menu generated by js end -->';
			$(menuDesktop).after(ma5menuHtml);
			$(menuDesktop).clone().attr('id', 'js-ma5menu-list').appendTo('#js-ma5menu');
			var menuMobile = $('#js-ma5menu-list');
			ma5menuBuilder_clearHTML(menuMobile);
			ma5menuBuilder_clearAttributes(menuMobile, activeClass);
			ma5menuBuilder_buildActive(menuMobile, activeClass);
			ma5menuBuilder_buildLevels($(menuMobile), 0, 'ma5-ul');
	}
	if ($('.ma5menu').length > 0) {
			var position = 'left';
			if (atributes.position === 'right') {
					position = atributes.position;
			}
			if (atributes.closeOnBodyClick === true) {
					$('html').on('click touch', function (e) {
							if (!$('.ma5menu__container').is(e.target) && $('.ma5menu__container').has(e.target).length === 0 && !$('.ma5menu__toggle').is(e.target) && $('.ma5menu__toggle').has(e.target).length === 0) {
									$('html').removeClass('ma5menu--active');
							}
					});
			}
			$('html').addClass('ma5menu--' + position);
			$('body').append('<div class="ma5menu__container"><div class="ma5menu__head"></div><div class="ma5menu__alert"><div class="ma5menu__alert-content"><span class="ma5menu__icon-up" aria-hidden="true"></span><span class="ma5menu__icon-up" aria-hidden="true"></span><span class="ma5menu__icon-up" aria-hidden="true"></span></div></div></div>');


			$('.ma5menu__header').clone().appendTo('.ma5menu__head');
			$('.ma5menu').find('ul').clone().addClass('ma5menu__panel').appendTo('.ma5menu__container').find('ul').remove();
			$('.ma5menu__panel').each(function () {
					$(this).wrap('<div></div>');
					$(this).parent().addClass($(this).attr('class')).attr('data-ma5order', $(this).attr('data-ma5order'));
					$(this).removeAttr('class').removeAttr('data-ma5order');
			});
			if($(menuFooter).length > 0) {
					$('.ma5menu__panel').append('<div class="ma5menu__footer js-append">' + $(menuFooter).html() + '</div>');
			}
			$('.ma5menu__toggle').on('click touch', openMA5Menu);
			$('.ma5menu__btn--enter').on('click touch', function () {
					$('.ma5menu__panel').removeClass('ma5menu__panel--active');
					$('.ma5menu__panel li').removeClass('ma5menu__li--current');
					var itemPath = $(this).parent().attr('data-ma5order').replace("li", "ul");
					var itemParent = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
					var spliced = itemParent.splice(-1, 1);
					itemParent = itemParent.join("-");
					$('.ma5menu__panel').removeClass('ma5menu__panel--active-leave ma5menu__panel--parent-leave ma5menu__panel--active-enter ma5menu__panel--parent-enter');
					$('[data-ma5order="' + itemParent + '"]').addClass('ma5menu__panel--parent-enter');
					$('[data-ma5order="' + itemPath + '"]').addClass('ma5menu__panel--active-enter ma5menu__panel--active');
					setTimeout(function () {
							ma5menuCheckScroll();
					}, 500);
			});
			$('.ma5menu__leave').on('click touch', function () {
					$('.ma5menu__panel').removeClass('ma5menu__panel--active');
					var itemParent = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
					var splicedParent = itemParent.splice(-1, 1);
					splicedParent = itemParent.splice(-1, 1);
					itemParent = itemParent.join("-");
					var itemPath = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
					var spliced = itemPath.splice(-1, 1);
					itemPath = itemPath.join("-");
					$('.ma5menu__panel').removeClass('ma5menu__panel--active-leave ma5menu__panel--parent-leave ma5menu__panel--active-enter ma5menu__panel--parent-enter');
					$('[data-ma5order="' + itemParent + '"]').addClass('ma5menu__panel--parent-leave ma5menu__panel--active');
					$('[data-ma5order="' + itemPath + '"]').addClass('ma5menu__panel--active-leave');
					setTimeout(function () {
							ma5menuCheckScroll();
					}, 500);
			});
			var didResize = false;
			$(window).on('resize', function () {
					didResize = true;
			});
			setInterval(function () {
					if (didResize) {
							didResize = false;
							ma5menuCheckScroll();
					}
			}, 300);
	}
}

function openMA5Menu(event) {
	$('html').addClass('ma5menu--ready').toggleClass('ma5menu--active').addClass('ma5menu--overflow');
	$('.ma5menu__panel').removeClass('ma5menu__panel--active-leave ma5menu__panel--parent-leave ma5menu__panel--active-enter ma5menu__panel--parent-enter');
	setTimeout(function () {
			ma5menuCheckScroll();
	}, 500);
	event.stopPropagation();
}

// scroll menu content alert
function ma5menuCheckScroll() {
	$('html').removeClass('ma5menu--overflow');
	$('.ma5menu__container').removeClass('ma5menu__container--scroll');
	if ($('.ma5menu__panel.ma5menu__panel--active').detectElementScrollbar()) {
			$('.ma5menu__container').addClass('ma5menu__container--scroll');
			$('.ma5menu__panel.ma5menu__panel--active').bind('scroll', function () {
					if (($(this).scrollTop() + $(this).innerHeight() + 1) >= $(this)[0].scrollHeight) {
							$('.ma5menu__container').removeClass('ma5menu__container--scroll');
					} else {
							$('.ma5menu__container').addClass('ma5menu__container--scroll');
					}
			});
	} else {
			$('.ma5menu__panel.ma5menu__panel--active').unbind("scroll");
	}
}

// builder functions
function ma5menuBuilder_clearAttributes(menu, activeClass) {
	var whitelist = ["src", "alt", "href"];
	var menuChildrens = $(menu).find('*');
	var menuRoot = $(menu);
	$(menuRoot).each(function () {
			var attributes = this.attributes;
			var i = attributes.length;
			while (i--) {
					var attr = attributes[i];
					if ($.inArray(attr.name, whitelist) === -1) {
							this.removeAttributeNode(attr);
					}
			}
	});
	$(menuChildrens).each(function () {
			var isException = $(this).is('.' + activeClass);
			var attributes = this.attributes;
			var i = attributes.length;
			while (i--) {
					var attr = attributes[i];
					if ($.inArray(attr.name, whitelist) === -1) {
							this.removeAttributeNode(attr);
					}
			}
			if (isException) {
					$(this).addClass(activeClass);
			}
	});
}

function ma5menuBuilder_clearHTML(menu) {
	var list = $(menu).find('ul');
	list.each(function () {
			$(this).unwrapUntil("li");
	});
	var link = $(menu).find('a');
	link.each(function () {
			$(this).unwrapUntil("li");
			link.find('> b, > strong, > span, > div, > i').replaceWith(function () {
					return $(this).contents();
			});
	});
	var images = $(menu).find('a > img');
	images.each(function () {
			if ($(this).parent().attr('title') !== undefined) {
					var title = $(this).parent().attr('title');
					$(this).parent().append(title).find('img').remove();
			} else {
					var alt = $(this).attr('alt');
					$(this).parent().append(alt).find('img').remove();
			}
	});
	$(menu).find('div:not([attr_all])').remove();
}

function ma5menuBuilder_buildActive(menu, activeClass) {
	var active = $(menu).find('.' + activeClass);
	if (active.length === 0) {
			$(menu).attr('data-ma5order', 'ma5-ul').addClass('ma5menu__panel--active');
	} else {
			$(menu).attr('data-ma5order', 'ma5-ul').removeClass('ma5menu__panel--active');
			var lvl = active.parentsUntil('#js-ma5menu').length;
			active.each(function () {
					var thisParent = $(this).parent();
					if (this.tagName === 'A') {
							$(this).parent().addClass('ma5menu__li--current').parent().addClass('ma5menu__panel--active');
							$(this).addClass('ma5menu__path');
							while (lvl--) {
									thisParent = thisParent.parent().parent();
									thisParent.find('> a').addClass('ma5menu__path');
							}
					}
					if (this.tagName === 'LI') {
							$(this).addClass('ma5menu__li--current').parent().addClass('ma5menu__panel--active');
							$(this).find('> a').addClass('ma5menu__path');
							while (lvl--) {
									thisParent = thisParent.parent();
									thisParent.find('> a').addClass('ma5menu__path');
							}
					}
			});
	}
	$('#js-ma5menu').find('.' + activeClass).removeClass(activeClass);
}

function ma5menuBuilder_buildLevels(parent, level, order) {
	parent.addClass('lvl-' + level);
	var orderLi = order.replace('ul', 'li');
	var children = parent.children('li');
	children.attr('data-ma5order', function (i) {
			return orderLi + '-' + (i + 1);
	});
	children.each(function () {
			var n = 0;
			var thisOrder = $(this).attr('data-ma5order').replace('li', 'ul');
			$(this).find('> ul').attr('data-ma5order', thisOrder);
			var sublist = $(this).children('ul');
			if (sublist.length > 0) {
					var thisText = $(this).find('> a').text();
					$(this).find('> ul > li:first-child').prepend('<div class="ma5menu__leave"><span class="ma5menu__btn--leave"></span>' + thisText + '</div>');
					$('<span class="ma5menu__btn--enter"></span>').insertBefore($(this).find('> a'));
					var orderBuild = $(this).attr('data-ma5order');
					ma5menuBuilder_buildLevels(sublist, level + 1, orderBuild);
			}
	});
}

// ADDITIONAL FUNCTIONS

// https://github.com/jamesallardice/jquery.unwrapuntil
(function ($) {
	$.fn.unwrapUntil = function () {
			var arg = arguments[0],
					type = typeof arguments[0];
			if (type === "number") {
					$.each(this, function () {
							var $this = $(this);
							for (var i = 0; i < arg; i++) {
									$this.unwrap();
							}
					});
			} else if (type === "string") {
					$.each(this, function () {
							var $this = $(this);
							if ($this.closest(arg).length > 0) {
									while ($this.parent(arg).length === 0) {
											$this.unwrap();
									}
							}
					});
			} else if (type === "object") {
					$.each(this, function () {
							var $this = $(this);
							if ($this.closest(arg).length > 0) {
									while ($this.parent()[0] !== arg[0]) {
											$this.unwrap();
									}
							}
					});
			}
			return this;
	};
})(jQuery);
//

// detect IE
var htmlRootForDetectBrowser = document.getElementsByTagName('html')[0];

function isIE() {
	return ((navigator.appName == 'Microsoft Internet Explorer') || ((navigator.appName == 'Netscape') && (new RegExp("Trident/.*rv:([0-9]{1,}[\.0-9]{0,})").exec(navigator.userAgent) !== null)));
}

if (isIE()) {
	htmlRootForDetectBrowser.className += " ie";
} else {
	htmlRootForDetectBrowser.className += " noie";
}
//

// detect Safari
function detectSafari() {
	var ua = navigator.userAgent.toLowerCase();
	if (ua.indexOf('safari') != -1) {
			if (ua.indexOf('chrome') > -1) {
					return false;
			} else {
					return true;
			}
	}

}

if (detectSafari()) {
	htmlRootForDetectBrowser.className += " safari";
}
//

// ESC close
$(document).ready(function () {
	$("body").keydown(function (e) {
			if (e.keyCode == 27) {
					$('html').removeClass('ma5menu--active');
			}
	});
});
//

// detect-element-scrollbar module
function detectElementScrollbar() {
	$('[data-detect-scrollbar]').each(function () {
			if ($(this).get(0).scrollHeight > $(this).get(0).clientHeight) {
					$(this).addClass('has-scrollbar').removeClass('hasnt-scrollbar');
			} else {
					$(this).addClass('hasnt-scrollbar').removeClass('has-scrollbar');
			}
	});
}

$.fn.detectElementScrollbar = function () {
	if ($(this).get(0).scrollHeight > $(this).get(0).clientHeight) {
			$(this).addClass('has-scrollbar').removeClass('hasnt-scrollbar');
			return true;
	} else {
			$(this).addClass('hasnt-scrollbar').removeClass('has-scrollbar');
			return false;
	}
};
$(document).ready(function () {
	detectElementScrollbar();
});
$(window).on('resize', function () {
	detectElementScrollbar();
});
$(window).on('load', function () {
	detectElementScrollbar();
});
//

// detect-body-scrollbar
$(window).on('load', function () {
	if ($('body').outerHeight() > $(window).height()) {
			$('html').addClass('has-body-scrollbar');
	} else {
			$('html').addClass('hasnt-body-scrollbar');
	}
});
//

/*
 * jQuery prmenmu plugin v1.0.0
 * Copyright 2014 - 2016 by Steve George
 * http://www.pagerange.com/projects/prmenu
 * Released under the MIT license.
 * https://github.com/pagerange/prmenu/blob/master/LICENSE
 */

/*
 *   Usage:
 *
 *
 *		var options = {
 *			"fontsize": "14", // menu link text font-size
 *		  "height": "50", // height of the container element in px
 *			"case": "uppercase", // text transform on link text
 *			"linkbgcolor": "#000000", // base background color
 *			"linktextcolor": "#ffffff", // link text color
 *			"linktextweight": "400", // link text weight
 *			"linktextfont": "sans-serif", // link text font
 *			"hoverdark": false // hover background lighter or darker?
 *		};
 *
 *   $(document).ready(function(){
 * 	    $('ul#mymenu').prmenu(options);
 *   });
 *
 *
 */

; // close previous unclosed statements if any

(function($) {

	var plugin = {};

	$.prmenu = function(element, options) {

		// Set default options for plugin
		var defaults = {
			"fontsize": "14",
			"height": "50",
			"case": "uppercase",
			"linkbgcolor": "#000000",
			"linktextcolor": "#ffffff",
			"linktextweight": "400",
			"linktextfont": "sans-serif",
			"hoverdark": false
		};


		// create empty object to hold options
		plugin.o = {}


		// Function called when we initialize the plugin
		plugin.init = function() {

			// Merge user options with our defaults
			plugin.o = $.extend({}, defaults, options);

			plugin.o.shade = (plugin.o.hoverdark) ? -8 : 8;

			// Add the target element to the options object
			plugin.o.el = $(element);

			// resize elements to user specs
			plugin.activateMenu();

		} // end init

		plugin.activateMenu = function() {

			var links;
			links = plugin.o.el.children('li');

			// wrap element in prmenu_container div
			plugin.o.el.wrap('<div class="prmenu_container"></div>');

			plugin.o.el.parent().css('height', plugin.o.height + 'px');

			// prepend the mobile menu toggle
			plugin.o.el.parent().prepend('<ul class="menu-toggle"><li class="menu-toggle"><a href="#"></a></li></ul>');

			var menu_open = false;

			plugin.o.el.siblings('ul.menu-toggle').find('a').click(openMA5Menu);

			$(window).resize(function() {
					plugin.setupMenuDefaults();
			});

			plugin.setupMenuDefaults();

			$(window).on('scroll', function(){
				if(menu_open) {
					plugin.o.el.removeClass('hide');
					plugin.o.el.addClass('block');
				} 
			});

		} // end activateMenu


		plugin.setDefaultCss = function() {

			var anchors = plugin.o.el.find('a');

			anchors.css('font-size', plugin.o.fontsize + 'px');
			anchors.css('text-transform', plugin.o.case);
			anchors.css('color', plugin.o.linktextcolor);
			anchors.css('font-family', plugin.o.linktextfont);
			anchors.css('font-weight', plugin.o.linktextweight);

			plugin.o.el.parent('div').css('min-height', plugin.o.height + 'px');
			plugin.o.el.parent('div').find('li.menu-toggle a').each(function(){
			  $(this).css('background-color', plugin.o.linkbgcolor)
			});

			// Set background color for each anchor depending on its level
			anchors.each(function(){
				if($(this).parentsUntil(plugin.o.el, 'li').length == 1) {
					plugin.o.l1_bg = plugin.o.linkbgcolor;
					$(this).css('background-color', plugin.o.l1_bg);
				}
				if($(this).parentsUntil(plugin.o.el, 'li').length == 2) {
					plugin.o.l2_bg = plugin.shadecolor( plugin.o.linkbgcolor, plugin.o.shade);
					$(this).css('background-color', plugin.o.l2_bg);
				}
				if($(this).parentsUntil(plugin.o.el, 'li').length == 3) {
					plugin.o.l3_bg = plugin.shadecolor( plugin.o.linkbgcolor, plugin.o.shade * 2);
					$(this).css('background-color', plugin.o.l3_bg);
				}
				if($(this).parentsUntil(plugin.o.el, 'li').length == 4) {
					plugin.o.l4_bg = plugin.shadecolor( plugin.o.linkbgcolor, plugin.o.shade * 3);
					$(this).css('background-color', plugin.o.l4_bg);
				}
			});

			// Set background color for each anchor on hover depending on its level
			anchors.hover(
				function(){
					if($(this).parentsUntil(plugin.o.el, 'li').length == 1) {
						$(this).css('background-color', plugin.shadecolor( plugin.o.l1_bg, plugin.o.shade));
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 2) {
						$(this).css('background-color', plugin.shadecolor( plugin.o.l2_bg, plugin.o.shade));
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 3) {
						$(this).css('background-color', plugin.shadecolor( plugin.o.l3_bg, plugin.o.shade));
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 4) {
						$(this).css('background-color', plugin.shadecolor( plugin.o.l4_bg, plugin.o.shade));
					}
				},
				function(){
					if($(this).parentsUntil(plugin.o.el, 'li').length == 1) {
						$(this).css('background-color', plugin.o.l1_bg);
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 2) {
						$(this).css('background-color', plugin.o.l2_bg);
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 3) {
						$(this).css('background-color', plugin.o.l3_bg);
					}
					if($(this).parentsUntil(plugin.o.el, 'li').length == 4) {
						$(this).css('background-color', plugin.o.l4_bg);
					}
				}
			);


		}

		plugin.setupMenuDefaults = function() {
					plugin.setDefaultCss();
					plugin.resizeLinks();
					plugin.setLinkHeight();
					plugin.resizeLinks();
					plugin.setLinkHeight();
		}

		/*
		* Programatically change color based on passed parameters.
		* Source: http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors
		*/
		plugin.shadecolor = function (color, percent) {
		    var num = parseInt(color.slice(1),16),
		    amt = Math.round(2.55 * percent),
		    R = (num >> 16) + amt,
		    G = (num >> 8 & 0x00FF) + amt,
		    B = (num & 0x0000FF) + amt;
		    return "#" + (0x1000000 + (R<255?R<1?0:R:255)*0x10000 + (G<255?G<1?0:G:255)*0x100 + (B<255?B<1?0:B:255)).toString(16).slice(1);
		}

		plugin.setLinkHeight = function() {
				var anchors = plugin.o.el.children('li').children('a');
				var subanchors = plugin.o.el.children('li').children('ul').find('a');
				anchors.each(function(){
						var fontsize = anchors.css('font-size');
						var lineheight = parseInt(fontsize) + 3;
						var height = ($(this).height() > lineheight) ? lineheight * 2 : lineheight;
						var containerheight = plugin.o.height;
						var padding = Math.floor((containerheight - height) / 2);
						var paddingbottom = containerheight - (height + padding);

						$(this).css('line-height', lineheight + 'px');
						$(this).css('padding-top', padding + 'px');
						$(this).css('padding-bottom', paddingbottom + 'px');


				});

				subanchors.each(function(){
						var fontsize = anchors.css('font-size');
						var height = $(this).height();
						var lineheight = parseInt(fontsize) + 3;
						$(this).css('padding-top', '15px');
						$(this).css('padding-bottom', '15px');

				});

		}


		plugin.resizeLinks = function() {
			if ($(window).width() > 720) {
				plugin.setupMenuForDesktopDevices();
			} else {
				plugin.setupMenuForHandheldDevices();
			}
		}

		plugin.setupMenuForDesktopDevices = function() {

			var links, count, width, first, last, aheight;

			links = plugin.o.el.children('li');
			aheight = links.children('a').css('height');

			// Calculate space taken by all li, except for the last
			// Assign the remaining space to the last li
			if (links.length > 1) {
				count = links.length;
				width = 100 / count;
				first = width * (count - 1);
				last = 100 - first;
				width = width + '%';
				last = last + '%';
			} else {
				// If there's only a single element, make it 100% width'
				width = '100%';
				last = '100%';
			}

			// Set desktop navigation styling
			$('div.prmenu_container').css('height', aheight);
			links.css('width', width);
			links.last().css('width', last);
			plugin.o.el.css('display', 'block');
			
			// Ensure menu is visible at desktop sizes
			plugin.o.el.removeClass('hide');
			plugin.o.el.addClass('block');


		}

		plugin.setupMenuForHandheldDevices = function() {

			var links, aheight;

			links = plugin.o.el.children('li');
			aheight = links.find('a').css('height');

			// Set mobile navigation styling
			plugin.o.el.css('width', '100%');
			plugin.o.el.css('display', 'none');
			plugin.o.el.parent().css('height', aheight);
			plugin.o.el.removeClass('block');
			links.css('width', '100%');
			links.last().css('width', '100%');
			links.css('position', 'relative');
			links.css('left', '0');
			links.show();
			links.children('ul').show();


		}

		plugin.init();

	}

	$.fn.prmenu = function(options) {

		return this.each(function() {
			if (undefined == $(this).data('prmenu')) {
				var plugin = new $.prmenu(this, options);
				$(this).data('prmenu', plugin);
			}
		});

	}

})(jQuery);

$.fn.customMenubar = function(option) {
	ma5menu({
			menu: this,
			activeClass: 'active',
			position: 'left',
			closeOnBodyClick: true
	});

	$(this).prmenu(option ?? {
			"fontsize": "14",
			"height": "50",
			"case": "capitalize",
			"linkbgcolor": "#286090",
			"linktextcolor": "#ffffff",
			"linktextweight": "400",
	});
}
